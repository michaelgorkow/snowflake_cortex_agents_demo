USE ROLE ACCOUNTADMIN;
USE SCHEMA AI_DEVELOPMENT.PUBLIC;

-- Create External Access for AI developer
CREATE OR REPLACE NETWORK RULE ai_external_access_rule
  MODE = EGRESS
  TYPE = HOST_PORT
  VALUE_LIST = ('0.0.0.0:80', '0.0.0.0:443');

CREATE OR REPLACE EXTERNAL ACCESS INTEGRATION ai_external_access_integration
  ALLOWED_NETWORK_RULES = (ai_external_access_rule)
  ENABLED = true;

-- Create role for AI engineer
CREATE ROLE IF NOT EXISTS AI_ENGINEER;

-- Grant privileges to AI engineer role
GRANT USAGE, MONITOR, CREATE SCHEMA ON DATABASE AI_DEVELOPMENT TO ROLE AI_ENGINEER;
GRANT ALL ON SCHEMA AI_DEVELOPMENT.PUBLIC TO ROLE AI_ENGINEER;
GRANT ALL ON COMPUTE POOL AI_GPU_S_POOL TO ROLE AI_ENGINEER;
GRANT ALL ON WAREHOUSE AI_WH TO ROLE AI_ENGINEER;
GRANT USAGE ON INTEGRATION ai_external_access_integration TO ROLE AI_ENGINEER;

-- Grant privilege to use Cortex Functions
GRANT DATABASE ROLE SNOWFLAKE.CORTEX_USER TO ROLE AI_ENGINEER;

-- Grant privilege to monitor cortex analyst
GRANT APPLICATION ROLE snowflake.cortex_analyst_requests_admin TO ROLE AI_ENGINEER;

-- Grant privileges to use PyPi packages
GRANT DATABASE ROLE SNOWFLAKE.PYPI_REPOSITORY_USER TO ROLE AI_ENGINEER;

-- Grant privileges to create agents for Snowflake Intelligence
GRANT USAGE ON DATABASE SNOWFLAKE_INTELLIGENCE TO ROLE AI_ENGINEER;
GRANT USAGE, CREATE AGENT ON SCHEMA SNOWFLAKE_INTELLIGENCE.AGENTS TO ROLE AI_ENGINEER;

-- Create User for AI Development
CREATE USER IF NOT EXISTS AI_ENGINEER_USER 
    PASSWORD='TMPPWD!' 
    DEFAULT_ROLE = AI_ENGINEER
    DEFAULT_WAREHOUSE = AI_WH
    DEFAULT_SECONDARY_ROLES = ('ALL') 
    MUST_CHANGE_PASSWORD = TRUE;

GRANT ROLE AI_ENGINEER TO USER AI_ENGINEER_USER;

